{
  "easyQuestions": [
    {
      "id": "E1",
      "type": "text",
      "content": "Why do we add time dummies to a panel regression?",
      "options": [
        "To correct measurement error in the explanatory variable",
        "To absorb period-specific shocks that affect all units at the same time",
        "To remove every possible omitted variable",
        "To force errors with constant variance"
      ],
      "correctAnswer": "To absorb period-specific shocks that affect all units at the same time"
    },
    {
      "id": "E2",
      "type": "text",
      "content": "Consider the model y = a + bX + e. Suppose x tends to be higher in years when macro conditions also push up y. If you omit time dummies, what happens to the estimated slope on x?",
      "options": [
        "It remains unbiased",
        "It is less precise, but not biased",
        "It becomes exactly zero",
        "It can be biased upward or downward"
      ],
      "correctAnswer": "It can be biased upward or downward"
    },
    {
      "id": "E3",
      "type": "text",
      "content": "For high-frequency data with visible seasonality, which specification choice is most appropriate?",
      "options": [
        "Include dummies for months/quarters to capture seasonality patterns",
        "Include only annual dummies",
        "Include only a linear time trend",
        "Omit time controls and model serial correlation in the errors"
      ],
      "correctAnswer": "Include dummies for months/quarters to capture seasonality patterns"
    },
    {
      "id": "E4",
      "type": "text",
      "content": "When time dummies are included, how should we interpret the coefficient on x?",
      "options": [
        "As an average comparison across firms over all years",
        "As a pre-policy effect only",
        "As a comparison across years using only averages",
        "As a comparison across firms within the same year"
      ],
      "correctAnswer": "As a comparison across firms within the same year"
    },
    {
      "id": "E5",
      "type": "text",
      "content": "Why is it useful to color a scatterplot of y versus x by year?",
      "options": [
        "To reveal each firm's unobserved fixed effect",
        "To reveal cross-sectional heteroskedasticity",
        "To visualize whether the x-y relationship drifts over time",
        "To test instrument strength directly"
      ],
      "correctAnswer": "To visualize whether the x-y relationship drifts over time"
    }
  ],
    "mediumQuestions": [
    {
      "id": "M6",
      "type": "text",
      "content": "If you re-estimate the same regression but switch from conventional standard errors to firm-clustered standard errors, what changes?",
      "options": [
        "The estimated coefficient may change substantially",
        "Only the standard errors change; the coefficient point estimates stay the same",
        "Both the point estimate and standard errors change",
        "The sign of the coefficient typically flips"
      ],
      "correctAnswer": "Only the standard errors change; the coefficient point estimates stay the same"
    },
    {
      "id": "M7",
      "type": "text",
      "content": "If you fail to take into account serial correlation within firms, your confidence intervals will most likely be:",
      "options": [
        "Too wide (overly conservative)",
        "Unchanged",
        "Too narrow (overly optimistic)",
        "Exactly accurate if the sample is large"
      ],
      "correctAnswer": "Too narrow (overly optimistic)"
    },
    {
      "id": "M8",
      "type": "text",
      "content": "After adding firm-clustered standard errors to a time-dummy model, what will you most clearly notice?",
      "options": [
        "The standard errors and confidence intervals shrink",
        "The standard errors and confidence intervals widen",
        "The sign of the coefficients change",
        "The sample size drops sharply"
      ],
      "correctAnswer": "The standard errors and confidence intervals widen"
    },
    {
      "id": "M9",
      "type": "latex",
      "content": "You estimate the following regression model: $y_{it} = \\beta x_{it} + \\sum_{t=2020}^{2023} \\delta_t \\mathbf{1}_{\\text{year}=t} + u_{it}$, where 2019 is the reference year and $y_{it}$ is the log of the outcome. The estimated coefficient is $\\hat{\\delta}_{2021} = -0.06 \\; (SE = 0.02)$. Which interpretation of $\\delta_{2021}$ is correct?",
      "options": [
        "Holding $x_{it}$ fixed, expected $y$ in 2021 is about 6% lower than in 2019",
        "Holding $x_{it}$ fixed, expected $y$ in 2021 is about 6% lower than in 2020",
        "From 2020 to 2021, the outcome fell by 6% on average",
        "From 2020 to 2023, the outcome fell by 6% on average"
      ],
      "correctAnswer": "Holding $x_{it}$ fixed, expected $y$ in 2021 is about 6% lower than in 2019"
    },
    {
      "id": "M10",
      "type": "text",
      "content": "You are analyzing monthly firm-level data for the year 2024 only, where the dependent variable $Y$ is the logarithm of monthly sales and the explanatory variable $X$ is online advertising expenditure as a share of revenue. There are economy-wide shocks-such as seasonality and macroeconomic events-that affect all firms at the same time. Which set of time dummies should you include in your regression to capture these common shocks?",
      "options": [
        "No dummies",
        "Year dummies",
        "Month dummies",
        "Month + Year dummies"
      ],
      "correctAnswer": "Month dummies"
    }
  ],
    "hardQuestions": [
    {
      "id": "H1",
      "type": "text",
      "content": "When you switch the base year in a model with year dummies and an intercept, which objects stay exactly the same?",
      "options": [
        "The fitted values $\\hat{y}$",
        "The OLS estimate $\\hat{\\beta}$ on $x$",
        "Pairwise differences between any two year effects (e.g., $\\delta_{2021} - \\delta_{2018}$)",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": "H2",
      "type": "text",
      "content": "The figure displays $y$ (log productivity) against $x$ (capital intensity), with colors indicating different years. Based only on the figure ($y$ vs. $x$ colored by year), what can you conclude about adding year dummies to the regression model of $y$ on $x$?",
      "imageUrl": "td_images/TD_q12.png",
      "options": [
        "Year dummies are clearly required; strong time effects are visible.",
        "The plot doesn't show clear time effects. You can't conclude that year dummies are needed without a formal test.",
        "Year dummies would change the slope of the relationship between $x$ and $y$ but not the intercept.",
        "Year dummies cannot be included because they are collinear with the intercept in multi-year data."
      ],
      "correctAnswer": "The plot doesn't show clear time effects. You can't conclude that year dummies are needed without a formal test."
    },
    {
      "id": "H3",
      "type": "text",
      "content": "Under the Frisch-Waugh-Lovell approach with time dummies, what do you regress in the final step?",
      "options": [
        "Regress Y on residualized X",
        "Regress X on residualized Y",
        "Regress residualized Y on residualized X",
        "Regress residualized X on residualized Y"
      ],
      "correctAnswer": "Regress residualized Y on residualized X"
    },
    {
      "id": "H4",
      "type": "text",
      "content": "You have monthly sales from Jan-2020 to Oct-2025. You consider two time-dummy designs:<br>(a) Use one dummy variable for month (Jan-Dec) and one dummy variable for year (2020-2025).<br>(b) Create dummy variables for each month-year combination (e.g., Jan-2020, Feb-2020, ..., Oct-2025).<br>Which additional restriction does design (a) impose relative to design (b)?",
      "options": [
        "Year effects can differ by month",
        "Seasonality is constant across years",
        "Month shocks can vary by year",
        "There is no seasonality"
      ],
      "correctAnswer": "Seasonality is constant across years"
    },
    {
      "id": "H5",
      "type": "latex",
      "content": "In the panel model $y_{it} = \\beta x_{it} + \\gamma_t + u_{it}$, when will adding time fixed effects $\\gamma_t$ \\textbf{not} reduce omitted-variable bias in $\\hat{\\beta}$ (i.e., not change the OLS estimate from the no-time-FE regression)?",
      "options": [
        "$\\operatorname{Cov}(x_{it}, \\gamma_t) = 0$",
        "$\\operatorname{Cov}(x_{it}, \\gamma_t) > 1$",
        "$\\operatorname{Cov}(x_{it}, \\gamma_t) < 1$",
        "$x_{it}$ varies over time"
      ],
      "correctAnswer": "$\\operatorname{Cov}(x_{it}, \\gamma_t) = 0$"
    }
  ],
"surveyQuestions": {
  "treatment_0": [
    { "id": "S1", "text": "How confident are you in your answers to the pre-quiz questions?", "options": ["Pure guess", "Somewhat unsure", "Neutral", "Fairly confident", "Certain"] },
    { "id": "S2", "text": "Before watching any video, how familiar are you with this topic?", "options": ["Not at all familiar", "Slightly familiar", "Moderately familiar", "Quite familiar", "Very familiar"] },
    { "id": "S3", "text": "The video(s) improved my understanding of the topic.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] },
    { "id": "S4", "text": "The video(s) helped me answer the post-quiz questions.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] },
    { "id": "S5", "text": "I replayed because I still felt unsure after the first viewing.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree", "Not applicable"] }
  ],
  "treatment_1_no_replay": [
    { "id": "S1", "text": "How confident are you in your answers to the pre-quiz questions?", "options": ["Pure guess", "Somewhat unsure", "Neutral", "Fairly confident", "Certain"] },
    { "id": "S2", "text": "Before watching any video, how familiar are you with this topic?", "options": ["Not at all familiar", "Slightly familiar", "Moderately familiar", "Quite familiar", "Very familiar"] },
    { "id": "S3", "text": "The video(s) improved my understanding of the topic.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] },
    { "id": "S4", "text": "The video(s) helped me answer the post-quiz questions.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] },
    { "id": "S5", "text": "I replayed because I still felt unsure after the first viewing.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree", "Not applicable"] }
  ],
  "treatment_1_with_replay": [
    { "id": "S1", "text": "How confident are you in your answers to the pre-quiz questions?", "options": ["Pure guess", "Somewhat unsure", "Neutral", "Fairly confident", "Certain"] },
    { "id": "S2", "text": "Before watching any video, how familiar are you with this topic?", "options": ["Not at all familiar", "Slightly familiar", "Moderately familiar", "Quite familiar", "Very familiar"] },
    { "id": "S3", "text": "The video(s) improved my understanding of the topic.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] },
    { "id": "S4", "text": "The video(s) helped me answer the post-quiz questions.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] },
    { "id": "S5", "text": "I replayed because I still felt unsure after the first viewing.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree", "Not applicable"] },
    { "id": "S6", "text": "Compared with the original, the alternative made the topic:", "options": ["Much harder", "Slightly harder", "About the same", "Slightly easier", "Much easier"] },
    { "id": "S7", "text": "Watching both original and alternative videos made me feel more confident for the quiz.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] },
    { "id": "S8", "text": "Watching both original and alternative videos made it harder to keep track of the main ideas.", "options": ["Strongly disagree", "Disagree", "Neutral", "Agree", "Strongly agree"] }
  ]
}
}